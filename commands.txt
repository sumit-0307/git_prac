git init - invite a git to look at ur code and initialize it in an empty repo 
            or reinitialize it in an existing repo

git add - git add adds the changes made to ur project in a staging area as in a waiting room
            changes hang out in waiting room until u want to final commit 
(git add . - to add all changes
git add (file_name): git add index.html)

git commit - to save all the changes
(git commit -m "Message": git commit -m "index.html changes")

git status - if u want to see whats added in ur staging area 
            or what state ur in rn (if u r in a detachedHEAD state)

echo "# git_prac" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main   (changes ur branch from Master to main)
                    used just for naming convention 

git remote add origin https://github.com/sumit-0307/git_prac.git (provide ur git repo link to 
                                                                connect ur local git to github)

git push -u origin main     (final command to push ur code from local connection to github)


=======How to retrieve or go back to older versions of ur file=========
git log - this command provides u the list of commits and changes to ur project
(git log --oneline) : this gives u the samelog but in a shorter one line format

git checkout "HASH VALUE ID" - 
this lets you checkout the history of commits of a specific hash id commit
this also enters a detached HEAD state:
which means it only lets you explore the previous commits but you cant make any new commits


now if u want to get out of this detached head state just enter
git checkout main

now to GET BACK UR FILE OR GO TO BACK TO CHANGE U made
git revert "HASH ID" 

iske baad some audit appears now if u want to make changes in that audit log 
u can press i to enter edit mode and insert any revert message comments in ur audit
make sure to start the comments with # so that it gets ignored 

now after typing any revert messages press esc to escape the edit mode 
then type :wq and enter to save the changes and revert the changes u wanted
enter git log again to check ur revert 

now if u want to go to extreme back like go back to riyallyyy back in time and change some commit
git reset --hard "HASH ID"

git reset is really dangerous and risky 
cuz it wipes everything back to a specifi commit 
git revert still keeps ur history progress
but git reset is an atomic bumb



========BRANCHES IN GIT==========

so jaise samjh-
elden ring ke save files:
maine ek file me strength build try kiya and ab muje int build try krnahai 
so waht will i do? 
make a new file and start a new game or create a copy of ur file and start a new int build  
thats similar to branches in git 
it lets you work on different branches in a same project

to create a branch 
git branch (name)
then to switch to it js use checkout
git checkout (name)
to use it both in a short one line
git checkout -b (name)

then after ur switched to a new branch make any changes u want to ur files
once ur done use merge after checkout to main branch
git checkout main 
git merge (name)

then after ur done merging or bychance u dont want the branch commits
u can just delete it 
git branch -d (name)

to know what branches u have in ur system just use 
git branch 
